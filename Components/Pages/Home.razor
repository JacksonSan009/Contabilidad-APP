@page "/"
@using System.Globalization
@using System.Text.RegularExpressions
@using System.Diagnostics

<h1>Cuentas del Día</h1>

<input type="text" @bind-Value="description" placeholder="Gasto" />

<InputText type="text" @bind-Value="rawAmount" @oninput="FormatCurrency" placeholder="Valor a ingresar" />

<button class="btn btn-success" @onclick="AddDebit">+</button>

<h3>Lista de Débitos:</h3>
@if (debits.Count > 0)
{
    <ul>
        @foreach (var debit in debits)
        {
            <li>@debit</li>
        }
    </ul>
}

@code {
    private string rawAmount { get; set; } = "";
    private string description { get; set; } = "";

    private List<string> debits { get; set; } = new List<string>();

    private CultureInfo colombianCulture = new CultureInfo("es-CO");
    private NumberStyles numberStyles = NumberStyles.Number | NumberStyles.AllowCurrencySymbol;

    private void FormatCurrency(ChangeEventArgs e)
    {
        string input = e.Value?.ToString() ?? "";
        
        string normalizedInput = input.Trim();

        normalizedInput = normalizedInput.Replace(colombianCulture.NumberFormat.CurrencySymbol, "");
        // no permite decimales
        normalizedInput = normalizedInput.Replace(".", "").Replace(',', '.');
                
        if (decimal.TryParse(normalizedInput, numberStyles, colombianCulture, out decimal number))
        {
            rawAmount = string.Format(colombianCulture, "{0:C0}", number).Replace("$", "");
        }
        else
        {
            rawAmount = "";
        }
    }

    private void AddDebit()
    {
        if (decimal.TryParse(rawAmount, NumberStyles.Number, colombianCulture, out decimal amount))
        {
            debits.Add(string.Format(colombianCulture, "{0:C0}", amount));
            rawAmount = "";
        }
        else
        {
            rawAmount = "";
        }
    }
}
